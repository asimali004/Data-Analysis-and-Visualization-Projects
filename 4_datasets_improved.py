# -*- coding: utf-8 -*-
"""4 Datasets_Improved.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1rgbAfbcdMfEsj_gOE0_en_Pj6sGz-Zbz
"""

from google.colab import drive
drive.mount("/content/gdrive")

"""# Data Visualization and Analyses in Python

#1. Rainfall Dataset

# Dataset URL: https://data.gov.sg/dataset/rainfall-monthly-total
"""

import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns
from matplotlib import style

df = pd.read_csv("/content/gdrive/MyDrive/DATASETS 2/rainfall-monthly-total.csv")

"""This dataset shows monthly measured rain with a rain gauge in Singapore over the years since 1982 till end of 2020 

"""

df.head()

print("This is the shape of the dataset")
df.shape

print("These are the columns in the datasets")
df.columns

print("This is the description of the data")
df.describe()

print("This is the summary of the dataset")
df.info()

print("This defines the data types of the dataset")
df.dtypes

plt.figure(figsize=(16,10))
sns.lineplot(data=df, x="month", y="total_rainfall")
plt.title("Total Ranifall since 1982 - 2020")
plt.xlabel("Month")
plt.ylabel("Rainfall")
style.use("ggplot")
plt.show()

"""The graph above shows the trend in the total amount of rainfall measured in mm (with a rain gauge) over the years since 1982 up until 2020.The dataset was sampled and grouped by each month. By looking at the graph, we can see that the highest amount of rainfall discovered was between 700-800 mm of rain. The trend shown is neither constantly increasing nor constantly decreasing hence it has a random distribution.

#Detailed Data Description

Analysis: The graph above shows the trend in the total amount of rainfall measured in mm (with a rain gauge) over the years since 1982 up until 2020. The dataset was sampled and grouped by each month. By looking at the graph, we can see that the highest amount of rainfall discovered was between 700-800 mm of rain. The trend shown is neither constantly increasing nor constantly decreasing hence it has a random distribution.
"""

month = df["month"]
total_rainfall = df["total_rainfall"]

plt.figure(num=None, figsize=(8,6), dpi=80, facecolor='w', edgecolor='k')
plt.scatter(month, total_rainfall)
plt.title("Scattered View of Rainfall Data")
plt.xlabel("Month")
plt.ylabel("Total Rainfall")
style.use("seaborn-whitegrid")
plt.grid(color="r")

df.sample(5)

import datetime as dt

df.month=pd.to_datetime(df.month)

df.head()

df["Year"]=df["month"].dt.year

df.head()

plt.figure(num=None, figsize=(8, 10), dpi=80, facecolor='w', edgecolor='k')
df.groupby(["Year"]).sum().plot(kind="bar",color="gbry")
plt.title("Yearly Rainfall")
plt.xlabel("Year",fontsize=15)
plt.ylabel("Total Rainfall in year",fontsize=15)
style.use("dark_background")
plt.grid(color="g")

df.groupby(["Year"]).sum()

"""#2. domestic-exports-by-area-annual

# Dataset URl: https://data.gov.sg/dataset/domestic-exports-by-area?view_id=98954d67-971b-4528-a450-11de26f3695e&resource_id=f5542e9d-58d5-48dc-b8c6-4ba692318b41
"""

df = pd.read_csv("/content/gdrive/MyDrive/DATASETS 2/domestic-exports-by-area-annual.csv")

"""This dataset contains all the domestic exports of the world grouped by continents from 1980 to 2014."""

df.head()

print("This is the shape of the dataset")
df.shape

print("These are the columns in the datasets")
df.columns

print("This is the description of the data")
df.describe()

print("This is the summary of the dataset")
df.info()

print("This defines the data types of the dataset")
df.dtypes

exports_2014 = df.query("year == '2014'")

areas = exports_2014["area"]
exports = exports_2014["domestic_exports"]

fig = plt.figure(figsize=(8,8))
ax = fig.add_axes([0,0,1,1])
ax.axis('equal')
ax.pie(exports, labels = areas,autopct='%1.2f%%',colors="bgrcmy")
plt.title("Domestic Exports by Area")
style.use("seaborn-whitegrid")
plt.grid(color="m")
plt.tight_layout()

"""#Detailed description of the Data

Analysis: We have chosen pie chart to display the trend of this dataset as it is the most appropriate choice. We can conclude that Asia has the highest amount of domestic exports, with 60.68 percent of the world's exports, when compared to other continents and this is logical since Asia is the biggest continent by land mass than any other continent hence it constitutes a lot more countries.
"""

df.sample(4)

df.dropna(inplace=True)

df=df[df.domestic_exports!="na"]

df.domestic_exports=df.domestic_exports.astype("float64")

aa=df.iloc[:,[1,2]].groupby(["area"]).sum()
bb=aa.values.reshape((1,6))[0]
aa

df.iloc[:,[1,2]].groupby(["area"]).sum().plot(kind="bar",color="gbrc")
plt.title("Domestic Exports vs Continent")
plt.xlabel("Continent",fontsize=16)
plt.ylabel("Domestic Exports",fontsize=16)
for index, value in enumerate(bb.round(decimals=1)):
  plt.text(index,value,str(value))
style.use("seaborn-talk")
plt.grid(color="c")

df.groupby(["year"]).sum()

plt.figure(num=None, figsize=(10, 20), dpi=80, facecolor='w', edgecolor='k')
df.groupby(["year"]).sum().plot(kind="bar",color="gbrymc")
plt.title("Yearly Domestic Exports")
plt.xlabel("Year")
plt.ylabel("Export Volume")
style.use("tableau-colorblind10")
plt.grid(color="darkorange")

"""#3. Singapore-citizens-by-age-group-ethnic-group-and-sex-end-june-annual

# Dataset URL: https://data.gov.sg/dataset/singapore-citizens-by-age-group-ethnic-group-and-sex-end-june-annual
"""

df = pd.read_csv("/content/gdrive/MyDrive/DATASETS 2/singapore-citizens-by-age-group-ethnic-group-and-sex-end-june-annual.csv")

"""This dataset shows the population count categorized by ethnic group, gender and age groups."""

df.head()

df.tail()

df.sample(7)

print("This is the shape of the dataset")
df.shape

print("These are the columns in the datasets")
df.columns

print("This is the description of the data")
df.describe()

print("This is the summary of the dataset")
df.info()

print("This defines the data types of the dataset")
df.dtypes

stats_2018 = df.query("(year == '2018') & (level_1 == 'Total Male Citizens')")

gender_group = stats_2018["level_1"].drop_duplicates()
Population = stats_2018["value"]

stats_2018["value"] = stats_2018["value"].apply(pd.to_numeric)
plt.figure(figsize=(8,16))
ax = stats_2018.plot.bar(x='level_2', y='value', rot=0,)
plt.title("Stats of Year 2018")
plt.xlabel("level_2",fontsize=15)
plt.ylabel("value")
style.use("dark_background")
plt.grid(color="r")

ax = sns.boxplot(x='level_1', y='value', data=stats_2018, color='forestgreen')
style.use("seaborn-dark-palette")
plt.title("BoxPlot",fontsize=20)
plt.xlabel("Level_1",fontsize=16)
plt.ylabel("Value",fontsize=16)
plt.grid(color="c")

df.head()

df1=df.iloc[:,[0,-1]]

df1.head()

df1=df1[df1.value!="na"]

df1.value=df1.value.astype("int64")

df1.groupby(["year"]).sum()

ab=df1.groupby(["year"]).sum()
ab.plot(kind="barh",color="brgcmy")
plt.gcf().set_size_inches(16, 10)
plt.title("Horizontal Bar Plot",fontsize=18)
plt.xlabel("Values",fontsize=20)
plt.ylabel("Year",fontsize=20)
for i, v in enumerate(ab.values):
    plt.text(v + 3, i + .25, str(v), color='blue', fontweight='bold')
style.use("seaborn-whitegrid")
plt.tight_layout()

df.sample(7)

df2=df.iloc[:,[2,3]]
df2.head(2)

df2=df2[df2.value!="na"]

df2.value=df2.value.astype("int")

df2.groupby(["level_2"]).sum()

df2.groupby(["level_2"]).sum().plot()

df2.groupby(["level_2"]).sum().plot(kind="bar",color="cmygbr")
plt.gcf().set_size_inches(16, 10)
plt.title("Age vs Value",fontsize=20)
plt.xlabel("Age Groups",fontsize=20)
plt.ylabel("Values",fontsize=20)
style.use("tableau-colorblind10")
plt.grid("g")

"""#Detail description of 3rd dataset

df variable stores the population of Singapore residents categorized by age, ethnic group and gender. stat_2018 selects only the stats from 2018 of male and female Singaporean citizens and their population. This data is visualized in two ways - with a bar chart and a box-plot diagram. The box plot diagram gives us the statistical indicators such as mean, median and mode. The bar chart shows the trend of our data set over the age groups of the male citizens in Singapore. Level_2 attribute is the age ranges and the level_1 attribute constitutes the ethnic and gender categories of the Singaporean population. Value stores the population count.

#Storyline for above 3 datasets

Channel News Asia reported that Singapore experienced its second coolest June in 2020 and the wettest in over a decade. In the same month, the National Environment Agency (NEA) published an article with the headline ‘Number Of Weekly Dengue Cases Expected To Exceed The Historical High Of 891 Unless Urgent Collective Community Action Is Taken’. Hence, I intend to find the relationship between the amount of rainfall and the number of dengue cases in Singapore, now coming towards the second dataset its about domestic exports.
I wanted to find out the annual domestic exports of Asia in 2014 and how they compare to exports in other continents. So I pulled up the dataset of annual domestic exports by area of all the continets from 1980 to 2014 and visualized the data using a pie chart.
Curiosity leads to many things. For our final exploratory analysis, I wanted to find out whcih ethnic group and gender has dominated the population count over the years and if the government actually recognizes population count as an economic indicator of some sort.

#4. weekly-infectious-disease-bulletin-cases
"""

weekly_diseases_df = pd.read_csv("/content/gdrive/MyDrive/DATASETS 2/weekly-infectious-disease-bulletin-cases.csv")
weekly_diseases_df.head(20)

"""I wanted to show the trend from 2019 to 2020. To plot the graph, I created a table and used a function to store all dengue cases per week."""

years = []
num_of_cases = []

def delete(x):
    if '2019' in x:
        years.append(x)
        return x
    elif '2020' in x:
        years.append(x)
        return x
    else: 
        x = 0
        
weekly_dengue_df = weekly_diseases_df[weekly_diseases_df['disease'] == 'Dengue Fever']
weekly_dengue_df = weekly_dengue_df.reset_index()
weekly_dengue_df = weekly_dengue_df.sort_values(by = 'epi_week', ascending = True)

weekly_dengue_df_use = weekly_dengue_df.copy()
weekly_dengue_df_use19 = weekly_dengue_df.copy()
weekly_dengue_df_use20 = weekly_dengue_df.copy()
weekly_dengue_df_use
        
weekly_dengue_df_use['epi_week'] = weekly_dengue_df_use['epi_week'].apply(delete)
weekly_dengue_df_use = weekly_dengue_df_use.dropna()
weekly_dengue_df_use = weekly_dengue_df_use.reset_index()

for case in weekly_dengue_df_use['no._of_cases']:
    num_of_cases.append(case)

weekly_dengue_df_use.head()

plt.figure(figsize = (60,20))
plt.plot(years, num_of_cases, marker = 'o', linestyle = 'solid')
plt.title('Dengue Cases from 2019 to 2020 W36', fontsize = 40)
plt.xlabel('Year', fontsize = 30)
plt.ylabel('Number of Cases', fontsize = 30)
style.use("classic")

"""Conclusion: From the graph, over the recent years, we can see that there has been a drastic increase in the number of dengue fever cases. The relation between the number of dengue fever cases is directly correlated to the increase in rainfall in Singapore. We come to this conclusion by looking at the data trend over the years from 2019 to 2020."""

