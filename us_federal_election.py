# -*- coding: utf-8 -*-
"""US Federal Election.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1SxM1SqmXv47eVpoWVf5MCwy0a9fFhLml
"""

from google.colab import drive
drive.mount("/content/gdrive")

import numpy as np
import pandas as pd

candidates = pd.read_csv("/content/gdrive/MyDrive/candidates.txt", sep='|', usecols=[0,1,2,3,4,5,9], names=['CAND_ID', 'CAND_NAME', 'CAND_PTY_AFFILIATION', 'CAND_ELECTION_YR', 'CAND_OFFICE_ST', 'CAND_OFFICE','CAND_PCC'])
candidates = candidates[candidates["CAND_ELECTION_YR"]==2020]
del candidates['CAND_ELECTION_YR']
print(candidates.shape)
candidates.head()

committees = pd.read_csv("/content/gdrive/My Drive/committees.txt", sep='|', usecols = [0,1,6,8,9,10,12,14], names=['CMTE_ID', 'CMTE_NM', 'CMTE_ST', 'CMTE_DSGN', 'CMTE_TP', 'CMTE_PTY_AFFILIATION', 'ORG_TP', 'CAND_ID'])
print(committees.shape)
committees.head()

candidate_committee_linkages = pd.read_csv("/content/gdrive/My Drive/candidate_committee_linkages.txt", sep='|', usecols = [0,3], names=['CAND_ID',  'CAND_ELECTION_YR', 'FEC_ELECTION_YR',  'CMTE_ID',  'CMTE_TP',  'CMTE_DSGN',  'LINKAGE_ID'])
print(candidate_committee_linkages.shape)
print(len(candidate_committee_linkages.CAND_ID.unique()))
candidate_committee_linkages.head()

individual_contributions = pd.read_csv("/content/gdrive/My Drive/indiv.txt", sep='|', usecols = [0,5,6,13,14], names=['CMTE_ID','TRANSACTION_TP', 'ENTITY_TP', 'TRANSACTION_DT', 'TRANSACTION_AMT'])
print(individual_contributions.shape)
individual_contributions.head()

committees_to_candidates_contributions = pd.read_csv("/content/gdrive/My Drive/committees_to_candidates_contributions.txt", sep='|', usecols = [0,5,6,7,9,13,14,16], names=['CMTE_ID','TRANSACTION_TP','ENTITY_TP','NAME','STATE','TRANSACTION_DT','TRANSACTION_AMT','CAND_ID'])
print(committees_to_candidates_contributions.shape)
committees_to_candidates_contributions.head()

committee_to_committee_contributions = pd.read_csv("/content/gdrive/My Drive/committee_to_committee.txt", sep='|', usecols = [0,5,6,13,14,15], names=['CMTE_ID','TRANSACTION_TP','ENTITY_TP','TRANSACTION_DT','TRANSACTION_AMT','OTHER_ID'])
print(committee_to_committee_contributions.shape)
committee_to_committee_contributions.head()

expenses = pd.read_csv("/content/gdrive/My Drive/op_expenses.txt", sep='|', usecols = [0,2,12,13,15,16,17], names=['CMTE_ID','REPORT_YR','TRANSACTION_DT','TRANSACTION_AMT','PURPOSE','CATEGORY','CATEGORY_DESC'])
print(expenses.shape)
expenses = expenses[expenses["REPORT_YR"]==2020]
del expenses['REPORT_YR']
expenses.head()

candidates.head()#checking data/ taking a look of the whole dataset

candidate_committee_linkages.head(3)#checking data

df1=candidate_committee_linkages.iloc[:,[0,1]]#extracting columns that are useful and ignoring the others
df1.head()

individual_contributions.head(3)#checking data

df2=individual_contributions.iloc[:,[0,4]]#extracting columns of committee id and the transaction amount
df2.columns=["CMTE_ID","TRANSACTION_AMT_1"]
df2.head()

committees_to_candidates_contributions.head(3)

df3=committees_to_candidates_contributions.iloc[:,[0,6,7]]#extracting useful colums
df3.columns=["CMTE","TRANSACTION_AMT_2","CAND_ID"]
df3.head()

committee_to_committee_contributions.head(3)

df4=committee_to_committee_contributions.iloc[:,[0,4,5]]#extracting useful colums
df4.columns=["CMTE_ID","TRANSACTION_AMT_3","OTHER_ID"]
df4.head()

expenses.head(3)

df5=expenses.iloc[:,[0,2]]#extracting useful colums
df5.columns=["CMTE_ID","TRANSACTION_AMT_4"]
df5.head()

print(df1.columns.values," \t\t\t   com-cond-linakges")
print(df2.columns.values,"  \t   individual")
print(df3.columns.values,"    com-to-cand")
print(df4.columns.values,"com-to-com")
print(df5.columns.values,"\t   expenses")

#df6=df2.append(df4)#merging the datasets on the column CMTE_ID
#df7=df5.append(df6)

inflow_1=pd.concat([df5,df2,df4,df1])
inflow_1.info()

inflow_1["TRANSACTION_AMT_1"]=pd.to_numeric(inflow_1["TRANSACTION_AMT_1"],errors="coerce")#Converting object datatype to numeric for further calculation

inflow_1["CASH_INFLOW"]=inflow_1["TRANSACTION_AMT_1"].fillna(0)+inflow_1["TRANSACTION_AMT_3"].fillna(0)# replacing null values with 0

output=pd.DataFrame()

flow=inflow_1.groupby("CAND_ID")
gb=flow.groups
output["CAND_ID"]=gb.keys()
output["Cash_Inflow"]=flow.sum()["CASH_INFLOW"].values
output["Cash_Outflow"]=flow.sum()["TRANSACTION_AMT_4"].values

output["Balance"]=output["Cash_Inflow"].fillna(0)-output["Cash_Outflow"].fillna(0)

output

inflow_1

